// Generated by gencpp from file ki_robotics/AIService.msg
// DO NOT EDIT!


#ifndef KI_ROBOTICS_MESSAGE_AISERVICE_H
#define KI_ROBOTICS_MESSAGE_AISERVICE_H

#include <ros/service_traits.h>


#include <ki_robotics/AIServiceRequest.h>
#include <ki_robotics/AIServiceResponse.h>


namespace ki_robotics
{

struct AIService
{

typedef AIServiceRequest Request;
typedef AIServiceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AIService
} // namespace ki_robotics


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::ki_robotics::AIService > {
  static const char* value()
  {
    return "ebf5e3c3cf0200651dc17aec0c4cde8e";
  }

  static const char* value(const ::ki_robotics::AIService&) { return value(); }
};

template<>
struct DataType< ::ki_robotics::AIService > {
  static const char* value()
  {
    return "ki_robotics/AIService";
  }

  static const char* value(const ::ki_robotics::AIService&) { return value(); }
};


// service_traits::MD5Sum< ::ki_robotics::AIServiceRequest> should match
// service_traits::MD5Sum< ::ki_robotics::AIService >
template<>
struct MD5Sum< ::ki_robotics::AIServiceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::ki_robotics::AIService >::value();
  }
  static const char* value(const ::ki_robotics::AIServiceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::ki_robotics::AIServiceRequest> should match
// service_traits::DataType< ::ki_robotics::AIService >
template<>
struct DataType< ::ki_robotics::AIServiceRequest>
{
  static const char* value()
  {
    return DataType< ::ki_robotics::AIService >::value();
  }
  static const char* value(const ::ki_robotics::AIServiceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::ki_robotics::AIServiceResponse> should match
// service_traits::MD5Sum< ::ki_robotics::AIService >
template<>
struct MD5Sum< ::ki_robotics::AIServiceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::ki_robotics::AIService >::value();
  }
  static const char* value(const ::ki_robotics::AIServiceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::ki_robotics::AIServiceResponse> should match
// service_traits::DataType< ::ki_robotics::AIService >
template<>
struct DataType< ::ki_robotics::AIServiceResponse>
{
  static const char* value()
  {
    return DataType< ::ki_robotics::AIService >::value();
  }
  static const char* value(const ::ki_robotics::AIServiceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KI_ROBOTICS_MESSAGE_AISERVICE_H
